<?php

namespace DoctrineProxies\__CG__\OaiPmhRepository\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OaiPmhRepositoryToken extends \OaiPmhRepository\Entity\OaiPmhRepositoryToken implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'verb', 'metadataPrefix', 'cursor', 'from', 'until', 'set', 'expiration'];
        }

        return ['__isInitialized__', 'id', 'verb', 'metadataPrefix', 'cursor', 'from', 'until', 'set', 'expiration'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OaiPmhRepositoryToken $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setVerb($verb)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVerb', [$verb]);

        return parent::setVerb($verb);
    }

    /**
     * {@inheritDoc}
     */
    public function getVerb()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerb', []);

        return parent::getVerb();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetadataPrefix($metadataPrefix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetadataPrefix', [$metadataPrefix]);

        return parent::setMetadataPrefix($metadataPrefix);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadataPrefix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetadataPrefix', []);

        return parent::getMetadataPrefix();
    }

    /**
     * {@inheritDoc}
     */
    public function setCursor($cursor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCursor', [$cursor]);

        return parent::setCursor($cursor);
    }

    /**
     * {@inheritDoc}
     */
    public function getCursor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCursor', []);

        return parent::getCursor();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrom($from)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrom', [$from]);

        return parent::setFrom($from);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrom', []);

        return parent::getFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setUntil($until)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUntil', [$until]);

        return parent::setUntil($until);
    }

    /**
     * {@inheritDoc}
     */
    public function getUntil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUntil', []);

        return parent::getUntil();
    }

    /**
     * {@inheritDoc}
     */
    public function setSet($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSet', [$set]);

        return parent::setSet($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSet', []);

        return parent::getSet();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiration(\DateTime $expiration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiration', [$expiration]);

        return parent::setExpiration($expiration);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpiration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpiration', []);

        return parent::getExpiration();
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceId', []);

        return parent::getResourceId();
    }

}
